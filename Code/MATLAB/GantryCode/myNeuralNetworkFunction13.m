function [y1] = myNeuralNetworkFunction13(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Aug-2017 14:46:45.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.75;41.0298715801228;427.88601489792;330.074525849867];
x1_step1_gain = [0.00103984762519467;0.00183435255313814;0.00123568613227103;0.00170376822672202];
x1_step1_ymin = -1;

% Layer 1
b1 = [1.0487984457273116;2.3814055630687805;0.70414629697062558;-0.90951698362974609;0.16581784166613781;-0.036487295139350187;0.40761268969549275;-0.80970655631635224;-1.2440986775053609;1.3828811151168874];
IW1_1 = [-0.42441182266103905 0.024094746840437956 -0.11798115798750999 -0.77425799600726741;-0.61976252581732649 0.011383117013359048 1.4539305012420647 -0.05950823185095689;-0.92394899014641574 -0.36602279056036524 -0.19769308021885218 -0.14753791525615101;0.97830826928597692 -0.21547738840976943 0.16531973142390088 -0.040427523988617729;1.0025066272082754 -0.67291145533757402 -0.49814208415412803 0.36054755402977468;0.95906377309183799 -0.29143864858043678 -0.39384224582879485 0.090280810925644397;0.34943439917298202 0.039431543414798757 0.13236810539377317 -0.51397495973782448;-0.68632733725000095 -0.13805302406177022 -0.10363032300917076 -0.26786351804335223;-1.052271159296134 -0.036559647750954077 0.44767832289744525 0.40239024449824634;0.22694716061725279 -0.28882544941438254 1.1679081978355974 0.18954470796034467];

% Layer 2
b2 = [-0.8637782293908125;1.1286498349531704;-0.29247897282382107];
LW2_1 = [-0.2734762412629923 -0.22643163676989109 0.10925384196632684 -0.90557845605857645 -0.16324497307865471 -0.20202513053428217 1.0599803947801965 -0.25089550777194153 0.95329598272311566 0.6409860220735083;0.59502514944553642 -0.91691190338852813 0.45444746315228629 -0.87468218096592965 -0.46692885439420556 1.0835800490126717 -1.5988715702348701 0.77969303710840243 -0.39050977832343248 -0.54301272164829129;-0.77547038173349048 0.34669104468548784 0.82271353977662109 0.4318080327809255 -0.051596505619156942 0.12046890717104039 3.4071570713038364 1.7442118875599704 -0.23007563813047568 -0.22551729650506819];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [2.57142857142857;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
