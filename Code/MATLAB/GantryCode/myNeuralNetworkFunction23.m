function [y1] = myNeuralNetworkFunction23(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Aug-2017 14:48:06.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [23.25;586.31543903454;427.88601489792;445.651500365943];
x1_step1_gain = [0.00145320188096398;0.00384648386166423;0.00123568613227103;0.00188983828028204];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.4008082447263881;0.34210823752410457;0.359503298118031;0.58371195184362579;-0.62751550155928093;-0.49376443147584936;5.9410010619855482;0.8882830636117558;1.2057175405688625;-1.3743938344072508];
IW1_1 = [0.15962586561164485 0.41184825972399436 -1.0517724116281792 -0.49928955551327281;0.034578471555385008 -0.14336757727979674 0.30902279777499947 0.03432848684294057;0.2755353796567146 0.23273426022330551 0.059496769232156251 0.19895322129296772;-1.2469762316737782 -0.035676831579511528 0.45956040034007678 0.0034228492537708172;-1.259408913461608 -0.20896761454944443 -0.54481647300600811 0.090191944775249652;0.59530028326511686 -0.030796008735198357 -0.48287310830747759 -0.095037455999968309;5.1629984492849141 0.22716790322830047 0.0035698919008174436 -0.12608035398285974;-0.18174532238923594 -0.81519113996740522 0.21200887236254648 0.46574842334466859;0.5886627335304474 0.20398554696603052 -0.51912434061570878 -0.38215703917874283;0.03349512463827467 1.3266447843901499 0.25866847077470678 -0.81934861936580039];

% Layer 2
b2 = [-1.6020083746885774;-2.0175579838612383;0.54055861200439026];
LW2_1 = [-1.3948841597368273 0.40086322417211245 0.016312093751087924 -1.054957343840117 -0.34844148144282 -1.5328706723580934 1.7013180459896236 0.76428504339006753 0.80564684155982502 0.35874197929736668;0.54650190852571134 1.6161144345491023 0.32178154097022171 0.9219335404367015 0.2397643846689366 3.0677057935810335 3.0044941986049745 -1.5079304439492085 0.28933837387084971 -0.56431425574032901;-0.40364760527721361 2.0284945903807508 -1.9806631896584816 0.54113410680674945 0.098887280198430363 2.1904839467826438 -0.49995350906473446 1.0470404537608411 0.77634235057510004 0.25105375315766043];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.83673469387755;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
