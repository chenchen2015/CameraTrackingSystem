function [y1] = regModelView13(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Jul-2017 12:32:02.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [58.3950723392064;16.6526946107784;423.41743442516;332.654054054054];
x1_step1_gain = [0.00109738896908689;0.00176613726220262;0.00123857604294176;0.00170960294146075];
x1_step1_ymin = -1;

% Layer 1
b1 = [-2.1818211777990495;-1.7543902636339561;0.89722213229376713;-0.36913817473703792;0.17574121510983873;-0.043239591215543216;-1.1170083845128387;1.8576249226323576;2.0231095434583;2.3383687298390821];
IW1_1 = [1.6358238514910142 -0.29119396028603178 1.0157832631467425 0.56564847811930419;-0.088540013635818482 1.5236249643091515 -1.3665235208126567 -1.503226589711723;-1.8618967895389542 0.5638408483609948 -0.069320804364294997 -1.2243974311973709;0.27680143359048887 0.21783711719719506 0.56810405414959131 -1.3695805206413121;0.31949576086396569 0.95889542333862021 0.76081723727972927 -0.89813763535215319;-1.1546377414336702 -0.53121728576676053 0.80101794189072817 0.57487735324629918;-0.80777203827326449 -0.37777604566740275 1.9469377327689237 1.4228571961561869;0.046160447255088194 1.7205641971040055 -0.70280069845923099 -1.1863785292640683;1.7984469756264654 0.10778111126351722 0.85085061979090182 0.77721520366277741;1.410475558174521 1.3136563040377822 -1.3884509358638133 -1.0348785822091122];

% Layer 2
b2 = [-0.35695448228198895;0.64801260750484202;0.91744967294657065];
LW2_1 = [-0.27439540777002597 -0.19030160060997753 0.14663991369135479 -0.16149805456313793 0.19531100128848758 0.96073769651554797 -0.12252715902417798 -0.319709648432559 0.5510557139242297 -0.51614259336672774;-0.525282897063305 0.67995485587856874 0.25267811616302949 -0.40016638152474326 -0.86784689726724773 0.62982492165448889 -0.38193634730497256 -0.31982954007744058 0.6352003242484705 -0.81091146318920282;0.41512843487163964 -0.055913588524101165 -0.040111091411998978 1.4782925060888417 -1.0088134387811292 0.22677298981071525 -0.48866240093434299 0.42489049267098783 0.29204037989492326 -1.0303469543177173];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [2.85714285714286;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
