function [y1] = regModelView23(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Jul-2017 12:45:55.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [22.5;593.194;399.266841976964;471.542918918919];
x1_step1_gain = [0.00151220245662344;0.00394177670488266;0.00122032465672986;0.00193991422567882];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.4742130636574111;-2.175645581390615;1.5044308306856675;-1.0666460432522287;-0.22329260323388433;0.41567703338760764;-2.228371188627821;-1.5246958679978064;-1.0098304354214267;1.6516231909573971];
IW1_1 = [-0.007372770184954542 -0.56002786041305141 1.7557711315759745 -1.3386626411321294;-0.60800212214160365 0.88583428920198493 1.9189520321239799 -0.55605783605862269;-1.187744782972552 0.015052933388800125 -1.1467260543043798 1.1751009538892125;0.50598594541599962 2.4999807905693192 -0.58199417242303964 1.0919841259064731;0.86124183044223956 -1.1421016272706099 -1.3711562710669871 0.59394828637315789;1.2414341361458341 -0.81763760732467206 1.9708533202104923 -1.7137917604324568;-2.5210797733000576 -1.2079504724337573 -0.1615748754575467 1.5440625350259845;-1.5226755674324404 2.924122300824203 0.25724509542977964 2.0319522261602003;-0.15079177907889713 -2.3612832864625499 -0.28015139948647583 -1.0678747123807835;1.1776573984304441 1.2767015873438858 -0.48894064665132209 0.29424059339159558];

% Layer 2
b2 = [-0.84605993828192594;0.28492468673326388;0.045114703862562056];
LW2_1 = [0.46585710746737746 0.10056085075693144 -0.51279658623112834 0.30530255014282459 -0.38828816342196554 0.26860476161946006 -0.35561387037734971 -0.20971585647844734 0.049718850633418854 0.26962802800922292;-0.016827616052678837 -0.4252996516109871 -0.12329701623667563 0.64188241224876097 1.1591250062753276 0.12338753613005815 -1.0097245695502033 -0.43357400564459825 -0.48812327873065436 -0.3272452540666001;0.044717020257026202 -0.077659703315991091 -0.036337264894180522 -0.51484093861344993 0.12708037128824529 0.023767492846307681 0.044801381568927823 0.051176825947719023 0.4912361681520781 -0.079088387294176166];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.90476190476191;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
