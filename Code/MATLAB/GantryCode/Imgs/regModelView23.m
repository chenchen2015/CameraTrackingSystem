function [Y,Xf,Af] = regModelView23(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 24-Jul-2017 16:38:05.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx4 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx3 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [22.5;593.194;399.266841976964;471.542918918919];
x1_step1_gain = [0.00151220245662344;0.00394177670488266;0.00122032465672986;0.00193991422567882];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.2417874747391702;1.6012034376268012;-1.2400703305782006;0.093195922056768826;-0.66724141861174124;0.52833842422046207;0.22271771629459527;3.2059131230014204;2.2772862426827021;1.8952489123839993];
IW1_1 = [-1.4575614959667291 1.6642979256398414 -0.71363049528439049 0.44356400271834551;-0.11562852323203472 -0.030487464831410831 0.24094881849570537 -1.6798356652129447;0.76697018235938708 -1.5525793796444167 -1.0234158084164127 0.76111799352652076;0.98437096238643607 -1.3184150543418844 1.8461955727163453 -1.2464563558037045;-0.70650010648808415 0.71347502906875548 0.21853804441597335 0.65560524956571864;-0.1247088276837401 -0.13491562568467777 0.50171186539926216 -0.32860319803294397;-0.033064672365700959 -1.3842246708830699 -0.0057428482016027354 0.21393776506913617;3.171788791802713 0.92024710336162086 0.11742938405520732 -1.0631722145695566;0.16643858605949427 1.6106760731431207 -1.0689006076927978 0.22771270117100467;1.2656026725175584 1.1727904067544335 -0.24590861388506963 -1.6177588946502928];

% Layer 2
b2 = [-0.57917585201991029;1.2827568414943642;0.076310576965251842];
LW2_1 = [-0.52886833523243448 -1.2116491487388814 0.12033512771763077 0.19893233618180728 -0.54633240275077921 1.7058373987649333 -1.051426693103799 0.28194984051735628 -0.064048224633916892 0.80525801998999769;-0.15495635175105457 -0.79917633783643693 1.0688987608097482 0.044918940534558471 -0.75159143884685087 -1.478544096108938 -0.31154084931511433 1.8751094725835253 0.26359396568033294 -0.22844579681512214;0.18729808921427607 -0.040137909080139048 0.5969887407521739 -0.06804047515639769 -0.18785810812177575 0.30372680424044823 1.1386282000850272 -0.13751194484548337 0.0048761844090216442 0.26079867511075089];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.90476190476191;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
