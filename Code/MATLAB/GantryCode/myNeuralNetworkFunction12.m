function [y1] = myNeuralNetworkFunction12(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Aug-2017 14:45:15.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.75;41.0298715801228;23.25;238.295750382848];
x1_step1_gain = [0.00103984762519467;0.00184130346372017;0.00250068656748874;0.00211924977615684];
x1_step1_ymin = -1;

% Layer 1
b1 = [5.4567043584618169;-4.4042987057232539;5.4297492701461305;4.4537237649216967;0.24350389159051822;1.4216864614416951;4.1447371146329015;0.32080908404908737;0.51877169598650785;-1.3192146951854362];
IW1_1 = [-0.088254757490279986 -1.2876998277610721 0.085714137709613517 -5.2630445605301359;0.076841116354115516 -0.033393913900042073 -3.037935383542397 0.037032446956714801;0.07966343509732135 -1.0288624972599152 3.7023748743129477 0.72912481782688177;-0.33605832172358913 -5.1398656652761296 0.016538115048792129 -0.91827962260540219;-0.39950534717052633 -1.3688088875982558 -0.58195211658829948 0.32904499322909853;0.31611034787027964 -0.62517535302384086 0.21157570821745444 -3.6600314557487397;-0.19053083876473476 -5.8242711340256053 0.094312183295983051 -0.45276900046371688;-0.21575044368146415 -1.2183693009951961 -0.31780788219090217 0.30600261349582036;0.81190310470775862 -0.11757029727940685 -0.45105045236216612 0.19717746573725695;0.024560065010483446 -0.08130975310594192 -0.023286805153981648 0.83846936769084179];

% Layer 2
b2 = [-2.0447421260048677;-10.666646323500714;-6.1874841876421387];
LW2_1 = [-1.4224200187839589 -4.5256123975381941 -3.8813565815750892 3.8041776301401016 1.4252625679969946 0.37337235515435307 -2.8008388069383092 -2.5952709122722699 -0.22422828330105812 -2.3943251611934078;2.2536629348623292 -6.5976304753358432 6.9999820435731577 -5.8978556508889515 -2.6632655145447113 -0.54614567767501221 4.3575528035969997 4.5152647666455881 -0.46735160837398304 4.4580100870989918;-1.0315967895573073 3.2569899179533173 2.6363566273294197 -0.14222046893706064 -1.3111817161299471 -0.44790271809435356 0.19813783611020008 2.486398575106775 0.077690642569357926 -9.4680468833819535];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.60714285714286;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
