function [y1] = NeuralNetwork123(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Sep-2017 14:50:11.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.33333333333333;101.721200626701;37.3382352941176;97.3025009794959;127.196987253766;739.550561797753];
x1_step1_gain = [0.00098508723825419;0.0020168546247265;0.00127554238414263;0.00182832175375945;0.00105543204661849;0.00266688499105578];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.3928209264555966;-0.047499332649772776;1.4984150611674216;-0.67035263462850769;0.41072038999417559;0.83262845769060234;-0.88566117673271672;0.970840426594894;1.7676736138966429;0.60645140880931991];
IW1_1 = [-1.2910438220324878 0.19182964316300408 0.71438854197447255 1.2068884083555782 -0.5776671937245671 -0.92570487051226913;0.21975968630401937 0.26965145240419608 0.92012178944715017 -0.023381924063211768 0.10033465212636841 -0.22805026946254836;-0.29928593973171458 -0.14416146136615643 0.034089792145327064 -1.0890131872351041 -1.0158937594397255 0.52352005072398045;0.69237466802379322 -0.06051545767414801 -0.046409050922186494 0.077302779014207734 -0.52949800956758231 -0.040164217872432642;-0.094506443678655863 0.14244578492851703 -1.4999709371675807 1.1917921014142605 -0.41541173542781495 -0.8280860246281585;0.051195734520846935 -1.1213321125731042 0.17354104626080341 -0.54693030901370099 -0.17722032321327144 0.44606639370390222;0.36259603243501248 1.5522196303042182 0.73663496585174637 -0.53457472054719113 1.0188792084171849 -0.95335192059597551;0.097039128708515804 0.019978571655804137 -0.58317853374800233 -0.3110168002996711 -0.23965788795364482 0.16075052166997514;0.85895382331485093 -0.28488173506917741 0.68137093666344228 -0.23708514901073618 0.79870890343881695 0.37464690565851094;0.35911552782095119 -0.4278351616259588 0.69588286705071878 -0.026540077585776266 0.54992029514952379 0.1789842483063398];

% Layer 2
b2 = [0.79589211196594212;0.44468988041794438;-0.437598597745394];
LW2_1 = [-0.30788019987954884 0.50932829405029878 0.43199720446211676 -0.65672247489718627 -0.13226298858666985 0.012028568474416145 -0.11033077662770775 -0.62352257114901644 -0.59733499451657246 -0.48770839587704162;-0.95336282849493093 -0.51730617485970598 -0.46810525966993805 -1.8762759530159396 -0.099847202109780611 -0.041645021241574535 0.14287117113790254 -0.77304333926313151 -0.35518501447960338 0.74971779149966522;-0.12508085267172131 -0.45750479865537053 0.39803388296766895 -0.079465116386407089 0.23135194461979297 1.9457380198880008 0.79097782071889489 -0.29958458301625651 0.71080650449805705 -0.63890979412266646];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.42857142857143;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
