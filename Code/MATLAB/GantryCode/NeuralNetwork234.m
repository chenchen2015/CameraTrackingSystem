function [y1] = NeuralNetwork234(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Sep-2017 14:54:16.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [23.2666666666667;543.472790697674;1071.25152129817;712.206581352834;474.443248977118;442.241958939264];
x1_step1_gain = [0.00107601067209837;0.00343632443510552;0.00208666023282222;0.00194738864986505;0.00127267110252572;0.00225758167563735];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.859623192110319;-1.4909801090044199;-1.5978214561763846;-0.75889948098151627;2.7171060648120893;0.63944438265875037;0.50753102657033078;-1.2533504055827356;-0.13982263339228179;-1.745875412421501];
IW1_1 = [0.5340472898084887 -0.60856565114058248 0.63442363236812316 -0.32652388118764508 -0.11063999871044397 -0.44858836158726223;0.87347674007535991 1.5180745879165791 0.30681930400442969 -0.42485407007797554 -0.52463895112294068 -0.13610369634347882;1.213599649387225 0.7421019846883834 -0.69577683657030054 -1.1928946342519013 -0.45249655965003605 -0.94641903408433126;-0.046799113396904402 0.71531162998534437 0.073612477466810294 -0.99774335451041629 -0.11125138004840812 0.26424382448597322;0.52772108392049555 -1.4140376030648087 0.078900707656060498 3.1984758637019657 -0.088247547325028861 -0.043802157034993759;-1.0128930454964633 -0.17129226339030509 0.92489078545206871 0.74129449256754198 0.21910471017105054 -0.1713686495368798;-0.27380486617579991 0.015221391481447969 1.0116393164211603 -0.038908894979072406 0.20126809421652964 0.17188785239101392;-0.2061735971449479 0.4402013526709489 0.25346689671197281 -0.82832926200398671 -0.046310320996114381 -0.12161716572133223;0.26908092726550664 -0.42108969471467916 0.069548511303582361 -1.1160031809759767 -0.12886613760301349 0.082997064328622319;-0.69606667995945148 -0.19318492141877003 -0.57994922288681094 1.1875564278244373 0.016900904265547582 0.14084959178783055];

% Layer 2
b2 = [-0.96877610078414156;0.17101005552201692;0.34215571894205765];
LW2_1 = [0.98848923413249867 -0.19148971748475418 -0.39929280665604894 -1.3656533008250327 1.7286112870032901 -0.6505800871008689 0.64531035482846111 -1.0992397839334775 -0.0593879835337561 1.5751266827798198;0.55320251588286717 0.56181309320807926 -0.63269531417243252 -1.1201284504414359 3.1046856168579939 -1.0807871123179562 1.3439233382653566 2.090222718297496 0.11819362509342531 1.3484849795346583;-0.079229361012080599 -0.20410255693800475 0.22018052878366612 -0.94435776824030893 -0.82636167411383787 0.27765900926594966 -0.26708505479292571 0.77492861194913176 0.92230213999871447 -0.44552581815707987];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [1.42857142857143;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
