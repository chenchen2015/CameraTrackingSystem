function [y1] = myNeuralNetworkFunction123(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-Aug-2017 15:02:32.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1.75;41.0298715801228;23.25;586.31543903454;427.88601489792;445.651500365943];
x1_step1_gain = [0.00103984762519467;0.00184130346372017;0.00295819505916252;0.00389795887952747;0.00123568613227103;0.00188983828028204];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.4890285390201232;-1.1794445729296434;-0.7952888546435416;-0.28529975991629286;-0.88943219364052817;-1.8192431506626447;-0.14905809113412063;3.3631801036219962;0.46780399491961938;-2.0854434674919138];
IW1_1 = [0.62559464093363115 0.51640194681105744 -0.30981084498348649 0.034874443894113261 0.46618192086756172 -0.58376841222639608;-0.15465406515214317 0.063886571391022232 0.2495324418647257 0.28135176649027072 -1.050761319865628 -0.20678279686513135;-0.24520176944280689 -0.07924709326623508 0.034280315024817508 -0.24961914596871859 0.22523238719073019 -0.40657486122151004;-1.2651448898106852 -0.16712983619923133 -0.23485079764775962 0.50100896310580767 -1.2278901658157346 -0.093807575166782287;-0.50105031733590821 0.16659417573741131 -0.31713488718616473 0.25756676997821609 -0.34855090802308603 0.28352838419618481;0.72769047783439822 -0.15341387149862398 -0.99063714839573735 -0.12558989513383015 0.30357014249135333 0.17959395923418123;-0.43821761410904059 0.057390730158643891 -0.37104516299069151 0.099071045916294023 0.046619101512955126 -0.6152336425794227;0.61843883689604817 1.4802702061082953 0.44668445560781223 -0.57855832247108085 -2.437125525259014 -0.44981018219213081;0.30977494610094719 -0.14792969188843363 0.027504296422520776 -0.059245855972237034 -0.29520347743585562 0.1933045144453113;-0.74840697153772895 -0.33840962259940416 0.91076295203480606 -0.72082425847401566 -0.10766724524238241 1.5000855901300676];

% Layer 2
b2 = [0.019939346394070384;-0.18826593795766033;-0.049257712783670665];
LW2_1 = [-0.26757404867577367 -0.50209377803602828 -0.015357223127577591 -0.0069023597010313782 -0.23820164900382521 -0.59001143503459375 -0.16396922574417924 -0.26498875160590152 -1.688470872625444 0.60430804540776817;-0.34143038917076046 0.97796912087391907 0.13698931627059896 0.2772680125796837 -0.1773523131247921 -1.0143556629712527 -0.043489479281917959 0.53209743395544762 0.069350997514946749 0.53795296864196795;-0.53598057270463095 0.20763240923606086 1.0493248382894953 0.036773812618641578 -1.1480576939602773 0.75378065194709554 1.3274577692456118 -0.052045256453931495 1.0028825420908107 0.24697882881869376];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [2.57142857142857;2.5;5.71428571428571];
y1_step1_xoffset = [-0.7;-0.4;-0.35];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
